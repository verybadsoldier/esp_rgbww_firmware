#
name: Create and publish a Docker image

on:
  push:
    tags:
      - "*.*.*"

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: write
      packages: write
      # 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            submodules: 'true' 
      - name: Build
        id: build
        run: |
          tar xvf ${{ github.workspace }}/.devcontainer/esp-open-sdk.tar.xz -C /opt
          make -j$(nproc) SMING_RELEASE=1
      - name: Zip Firmware Files
        run: |
          (cd out/Esp8266/release/firmware && zip -r ../../../../${{ github.event.repository.name }}-esp8266-${{ github.ref_name }}.zip .)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-esp8266-${{ github.ref_name }}  # will create a zip with this basename
          path: out/Esp8266/release/firmware/*
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        if: "!contains(github.ref_name, '-alpha')"
        with:
          files: |
            ${{ github.event.repository.name }}-esp8266-${{ github.ref_name }}.zip
      - name: Determine Feed Name
        id: get_feed
        run: |
          TAG_NAME="${{ github.ref_name }}"
          if [[ $TAG_NAME == *"-alpha"* ]]; then
            echo "FEED=unstable" >> $GITHUB_ENV
          elif [[ $TAG_NAME == *"-"* ]]; then
            echo "FEED=testing" >> $GITHUB_ENV
          else
            echo "FEED=release" >> $GITHUB_ENV
          fi

      - name: Deploy to gh-pages branch
        run: |
          # Set constants and variables
          GH_PAGE_LINK="http://rgbww.dronezone.de/${{ env.FEED }}/"
          WEBAPP_VERSION="0.3.3" # Can also be a variable or input
          GIT_DEPLOY_REPO="github.com/verybadsoldier/esp_rgbww_firmware.git"
          
          echo "Deploying tag ${{ github.ref_name }} to feed: ${{ env.FEED }}"

          # Clone the target repository's gh-pages branch
          git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@${GIT_DEPLOY_REPO}" --branch gh-pages --single-branch --depth 1 deploy_release
          #git clone "https://{GITHUB_TOKEN}@${GIT_DEPLOY_REPO}" --branch gh-pages --single-branch --depth 1 deploy_release
          
          # Configure Git for the commit
          cd deploy_release
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          ARTIFACTS_DIR="${{ github.workspace }}/out/Esp8266/release/firmware/"

          echo "Prepare folder and copy firmware files"
          mkdir -p "${{ env.FEED }}"
          cd "${{ env.FEED }}"
          git rm *
          cp ${ARTIFACTS_DIR}/* .
          
          echo "Create the version information JSON file"
          cat <<EOF > version.json
          {"rom":{"fw_version":"${{ github.ref_name }}","url":"${GH_PAGE_LINK}rom0.bin"},"spiffs":{"webapp_version":"${WEBAPP_VERSION}","url":"${GH_PAGE_LINK}spiff_rom.bin"}}
          EOF
          
          echo "Commit and push the changes"
          git add .
          git commit -m "Feed ${{ env.FEED }}: Firmware v${{ github.ref_name }} webapp v${WEBAPP_VERSION}"
          git push